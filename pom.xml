<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>frs.gui</groupId>
    <artifactId>frs-gui</artifactId>
    <version>1.0.0-beta</version>
    <packaging>jar</packaging>

    <name>FRSGUI</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>frs.gui.MainApp</mainClass>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <organization>
        <!-- Used as the 'Vendor' for JNLP generation -->
        <name>Your Organisation</name>
    </organization>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>system</excludeScope>
                            <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/../bin/javafxpackager</executable>
                            <arguments>
                                <argument>-createjar</argument>
                                <argument>-nocss2bin</argument>
                                <argument>-appclass</argument>
                                <argument>${mainClass}</argument>
                                <argument>-srcdir</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-outdir</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>-outfile</argument>
                                <argument>${project.build.finalName}.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>exec</goal>                            
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <commandlineArgs>${runfx.args}</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>  
            </plugin>
<!--            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>-->
<!--            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>webstart-maven-plugin</artifactId>
                <version>1.0-beta-7</version>
                <executions>
                    <execution>
                         bind to phase, I prefer to call it manualls 
                        <phase>package</phase>
                        <goals>
                            <goal>jnlp-inline</goal>  use jnlp, jnlp-inline or jnlp-single as appropriate 
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    outputDirectory></outputDirectory  not required?? 

                     Set to true to exclude all transitive dependencies. Default is false. 
                    <excludeTransitive>false</excludeTransitive>

                     The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory 
                     <libPath>lib</libPath> 
                     [optional] transitive dependencies filter - if omitted, all transitive dependencies are included 
                    <dependencies>
                         Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter 
                        
                        <includes>
                            <include>commons-logging:commons-logging</include>
                            <include>commons-cli:commons-cli</include>
                        </includes>
                        
                        
                        <excludes>
                            <exclude></exclude>
                        <excludes>
                        
                    </dependencies>

                    
                    <resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory>
                    
                     default value 

                     JNLP generation 
                    <sign>
                        <keystore>${basedir}/keystore</keystore>
                        <keypass>universe</keypass>   we need to override passwords easily from the command line. ${keypass} 
                        <storepass>universe</storepass>  ${storepass} 
                        storetype>fillme</storetype
                        <alias>EmbeddedTomcatWebstart</alias>

                        validity>fillme</validity

                         only required for generating the keystore 
                        <dnameCn>EmbeddedTomcatWebstart</dnameCn>
                        <dnameOu>Organisation Unit</dnameOu>
                        <dnameO>Organisation</dnameO>
                        <dnameL>Location</dnameL>
                        <dnameSt>State</dnameSt>
                        <dnameC>Country</dnameC>

                        <verify>true</verify>  verify that the signing operation succeeded 

                         KEYSTORE MANAGEMENT 
                        <keystoreConfig>
                            <delete>true</delete>  delete the keystore 
                            <gen>true</gen>        optional shortcut to generate the store. 
                        </keystoreConfig>
                    </sign>
                    <pack200>
                        <enabled>true</enabled>
                    </pack200>
                    <jnlp>
                         default values 
                        inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath
                        inputTemplate>src/main/jnlp/template.vm</inputTemplate  relative to inputTemplateResourcePath 
                        <outputFile>FRSGUI.jnlp</outputFile>  defaults to launch.jnlp 

                         used to automatically identify the jar containing the main class. 
                         this is perhaps going to change 
                        <mainClass>frs.gui.MainApp</mainClass>
                    </jnlp>


                     SIGNING 
                     defining this will automatically sign the jar and its dependencies, if necessary 
                    
                     BUILDING PROCESS 
                     <gzip>true</gzip>  default force when pack200 false, true when pack200 selected ?? 

                    install>false</install  not yet supported 
                    <verbose>true</verbose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${java.home}/lib/jfxrt.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>-->
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160212</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-cache</artifactId>
            <version>4.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.40.10</version>
        </dependency>
    </dependencies>
</project>
